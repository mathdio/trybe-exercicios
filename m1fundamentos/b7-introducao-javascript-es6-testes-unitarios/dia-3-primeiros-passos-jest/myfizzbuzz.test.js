const myFizzBuzz = require('./myfizzbuzz.js')

// ðŸš€ 3 - A funÃ§Ã£o myFizzBuzz(num) recebe um nÃºmero num e retorna "fizzbuzz" se o nÃºmero for divisÃ­vel por 3 e 5, retorna "fizz" se for divisÃ­vel apenas por 3, retorna "buzz" se divisÃ­vel apenas por 5, retorna o prÃ³prio nÃºmero caso nÃ£o seja divisÃ­vel por 3 ou 5 e retorna false caso num nÃ£o seja um nÃºmero
//1 - FaÃ§a uma chamada com um nÃºmero divisÃ­vel por 3 e 5 e verifique se o retorno Ã© o esperado
//2 - FaÃ§a uma chamada com um nÃºmero divisÃ­vel por 3 e verifique se o retorno Ã© o esperado
//3 - FaÃ§a uma chamada com um nÃºmero divisÃ­vel por 5 e verifique se o retorno Ã© o esperado
//4 - FaÃ§a uma chamada com um nÃºmero que nÃ£o Ã© divisÃ­vel por 3 ou 5 e verifique se o retorno Ã© o esperado
//5 - FaÃ§a uma chamada com um parÃ¢metro que nÃ£o Ã© um nÃºmero e verifique se o retorno Ã© o esperado

describe('tests the funcion myFizzBuzz', () => {
  it('verifies if returns fizzbuzz', () => {
    expect(myFizzBuzz(15)).toEqual('fizzbuzz');
  });

  it('verifies if returns fizz', () => {
    expect(myFizzBuzz(6)).toEqual('fizz');
  });

  it('verifies if returns buzz', () => {
    expect(myFizzBuzz(10)).toEqual('buzz');
  });

  it('verifies if returns the number', () => {
    expect(myFizzBuzz(4)).toEqual(4);
  });

  it('verifies if returns false', () => {
    expect(myFizzBuzz('test')).toBeFalsy();
  });
});